{"version":3,"sources":["components/Display.js","components/Key.js","modules/key-constants.js","components/KeyPad.js","modules/initialState.js","modules/getResult.js","modules/setPrecision10.js","modules/calculate.js","handlers/handleClear.js","handlers/handleDelete.js","handlers/handleEquals.js","handlers/handleOperator.js","handlers/handleDigit.js","handlers/handleDecimal.js","handlers/selectHandler.js","App.js","serviceWorker.js","index.js"],"names":["Display","props","className","expression","id","input","Key","keyData","class","onClick","type","value","keysData","KeyPad","map","data","key","initialState","isResult","isEquals","isNegative","isOperator","getResult","state","result","number","Number","isNaN","NaN","toString","absNumber","Math","abs","round","precision10","toPrecision","toExponential","setPrecision10","expressionString","tokenArray","match","left","term","token","shift","Error","primary","d","unshift","calculate","error","message","handleClear","zeroInput","slice","length","handleDelete","replaceNegative","equals","replaceOperator","append","handleEquals","appendToResult","operator","appendNegative","handleOperator","replaceResult","digit","appendToNegative","appendToOperator","replaceZero","handleDigit","limit","replace","isMaxDigits","handleDecimal","decimal","includes","selectHandler","App","useState","setState","useEffect","prevState","event","target","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79785b97.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Display.scss\";\n\nexport default function Display(props) {\n  return (\n    <div className=\"Display\">\n      <div className=\"Expression\">{props.expression}</div>\n      <div id=\"display\" className=\"Input\">\n        {props.input}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Key(props) {\n  return (\n    <button\n      className={\"Key \" + props.keyData.class}\n      id={props.keyData.id}\n      onClick={props.onClick}\n      type=\"button\"\n      value={props.keyData.value}\n    >\n      {props.keyData.value}\n    </button>\n  );\n}\n","export const CLEAR = \"AC\";\nexport const DELETE = \"C\";\nexport const DIVIDE = \"/\";\nexport const MULTIPLY = \"*\";\nexport const SUBTRACT = \"-\";\nexport const ADD = \"+\";\nexport const EQUALS = \"=\";\nexport const DECIMAL = \".\";\nexport const ZERO = \"0\";\nexport const ONE = \"1\";\nexport const TWO = \"2\";\nexport const THREE = \"3\";\nexport const FOUR = \"4\";\nexport const FIVE = \"5\";\nexport const SIX = \"6\";\nexport const SEVEN = \"7\";\nexport const EIGHT = \"8\";\nexport const NINE = \"9\";\n","import React from \"react\";\nimport Key from \"./Key\";\nimport * as KEY from \"../modules/key-constants\";\nimport \"./KeyPad.scss\";\n\nconst keysData = [\n  { id: \"clear\", class: \"clear\", value: KEY.CLEAR },\n  { id: \"delete\", class: \"delete\", value: KEY.DELETE },\n  { id: \"divide\", class: \"operator\", value: KEY.DIVIDE },\n  { id: \"multiply\", class: \"operator\", value: KEY.MULTIPLY },\n  { id: \"subtract\", class: \"operator\", value: KEY.SUBTRACT },\n  { id: \"add\", class: \"operator\", value: KEY.ADD },\n  { id: \"equals\", class: \"equals\", value: KEY.EQUALS },\n  { id: \"decimal\", class: \"digit\", value: KEY.DECIMAL },\n  { id: \"zero\", class: \"digit\", value: KEY.ZERO },\n  { id: \"one\", class: \"digit\", value: KEY.ONE },\n  { id: \"two\", class: \"digit\", value: KEY.TWO },\n  { id: \"three\", class: \"digit\", value: KEY.THREE },\n  { id: \"four\", class: \"digit\", value: KEY.FOUR },\n  { id: \"five\", class: \"digit\", value: KEY.FIVE },\n  { id: \"six\", class: \"digit\", value: KEY.SIX },\n  { id: \"seven\", class: \"digit\", value: KEY.SEVEN },\n  { id: \"eight\", class: \"digit\", value: KEY.EIGHT },\n  { id: \"nine\", class: \"digit\", value: KEY.NINE },\n];\n\nexport default function KeyPad(props) {\n  return (\n    <div className=\"KeyPad\">\n      {keysData.map((data) => (\n        <Key key={data.id} keyData={data} onClick={props.onClick} />\n      ))}\n    </div>\n  );\n}\n","function initialState() {\n  return {\n    expression: \"0\",\n    input: \"0\",\n    isResult: false,\n    isEquals: false,\n    isNegative: false,\n    isOperator: false,\n  };\n}\n\nexport default initialState;\n","import setPrecision10 from \"./setPrecision10\";\nimport calculate from \"./calculate\";\n\nfunction getResult(state) {\n  let result;\n\n  try {\n    result = setPrecision10(calculate(state.expression));\n  } catch (error) {\n    result = error.message;\n  }\n\n  return {\n    input: result,\n    isResult: !state.isResult,\n    isEquals: !state.isEquals,\n  };\n}\n\nexport default getResult;\n","export default function setPrecision10(number) {\n  if (Number.isNaN(number)) return NaN.toString();\n\n  if (number === 0) return \"0\";\n\n  const absNumber = Math.abs(number);\n\n  if (1e-6 <= absNumber && absNumber < 1) {\n    const round9 = Math.round(number * 1e9) / 1e9;\n    return round9.toString();\n  }\n\n  const precision10 = Number(number).toPrecision(10);\n\n  return absNumber < 1e-6 || 1e10 <= absNumber\n    ? Number(precision10).toExponential()\n    : Number(precision10).toString();\n}\n","export default function calculate(expressionString) {\n  const reNumberOrOperator = /(?:\\d+(?:\\.\\d*)?(?:e[-+]\\d+)?)|[-+*/=]/g;\n  const tokenArray = expressionString.match(reNumberOrOperator);\n\n  return expression();\n\n  /*\n  The following code has been adapted for JavaScript from:\n      Bjarne Stroustrup, \"Programming: Principles and Practice Using C++\"\n      Second Edition (Pearson Education, Inc., 2014).\n   */\n\n  function expression() {\n    let left = term();\n    let token = tokenArray.shift();\n\n    while (true) {\n      switch (token) {\n        case \"+\":\n          left += term();\n          token = tokenArray.shift();\n          break;\n        case \"-\":\n          left -= term();\n          token = tokenArray.shift();\n          break;\n        case \"=\":\n          return left;\n        default:\n          throw new Error(\"expression error\");\n      }\n    }\n  }\n\n  function term() {\n    let left = primary();\n    let token = tokenArray.shift();\n\n    while (true) {\n      switch (token) {\n        case \"*\":\n          left *= primary();\n          token = tokenArray.shift();\n          break;\n        case \"/\":\n          const d = primary();\n          if (d === 0) throw new Error(\"divide by zero\");\n          left /= d;\n          token = tokenArray.shift();\n          break;\n        default:\n          tokenArray.unshift(token);\n          return left;\n      }\n    }\n  }\n\n  function primary() {\n    const token = tokenArray.shift();\n    if (token === \"-\") return -primary();\n\n    const result = Number(token);\n    if (Number.isNaN(result)) throw new Error(\"primary expected\");\n\n    return result;\n  }\n}\n","import initialState from \"../modules/initialState\";\n\nfunction handleClear() {\n  return initialState();\n}\n\nexport default handleClear;\n","function handleDelete(state) {\n  const { isResult, isNegative, isOperator } = state;\n\n  if (isResult || isNegative || isOperator) return state;\n\n  return zeroInput(state);\n}\n\nconst zeroInput = (state) => ({\n  expression: state.expression.slice(0, -state.input.length) + \"0\",\n  input: \"0\",\n});\n\nexport default handleDelete;\n","function handleEquals(state, equals) {\n  const { isResult, isNegative, isOperator } = state;\n\n  if (isResult) return state;\n\n  if (isNegative) return replaceNegative(state, equals);\n\n  if (isOperator) return replaceOperator(state, equals);\n\n  return append(state, equals);\n}\n\nconst replaceNegative = (state, equals) => ({\n  expression: state.expression.slice(0, -2) + equals,\n  isNegative: !state.isNegative,\n  isEquals: !state.isEquals,\n});\n\nconst replaceOperator = (state, equals) => ({\n  expression: state.expression.slice(0, -1) + equals,\n  isOperator: !state.isOperator,\n  isEquals: !state.isEquals,\n});\n\nconst append = (state, equals) => ({\n  expression: state.expression + equals,\n  isEquals: !state.isEquals,\n});\n\nexport default handleEquals;\n","function handleOperator(state, operator) {\n  const { isResult, isNegative, isOperator } = state;\n\n  if (isResult) return appendToResult(state, operator);\n\n  if (isNegative) return replaceNegative(state, operator);\n\n  if (isOperator)\n    return operator === \"-\"\n      ? appendNegative(state, operator)\n      : replaceOperator(state, operator);\n\n  return append(state, operator);\n}\n\nconst appendToResult = (state, operator) => ({\n  expression: state.input + operator,\n  input: operator,\n  isResult: !state.isResult,\n  isOperator: !state.isOperator,\n});\n\nconst replaceNegative = (state, operator) => ({\n  expression: state.expression.slice(0, -2) + operator,\n  input: operator,\n  isNegative: !state.isNegative,\n  isOperator: !state.isOperator,\n});\n\nconst appendNegative = (state, operator) => ({\n  expression: state.expression + operator,\n  input: operator,\n  isNegative: !state.isNegative,\n  isOperator: !state.isOperator,\n});\n\nconst replaceOperator = (state, operator) => ({\n  expression: state.expression.slice(0, -1) + operator,\n  input: operator,\n});\n\nconst append = (state, operator) => ({\n  expression: state.expression + operator,\n  input: operator,\n  isOperator: !state.isOperator,\n});\n\nexport default handleOperator;\n","function handleDigit(state, digit) {\n  const { input, isResult, isNegative, isOperator } = state;\n\n  if (isMaxDigits(input, 10) && !isResult) return state;\n\n  if (isResult) return replaceResult(state, digit);\n\n  if (isNegative) return appendToNegative(state, digit);\n\n  if (isOperator) return appendToOperator(state, digit);\n\n  if (input === \"0\") return replaceZero(state, digit);\n\n  return append(state, digit);\n\n  function isMaxDigits(input, limit) {\n    return input.replace(/[.-]/g, \"\").length === limit;\n  }\n}\n\nconst replaceResult = (state, digit) => ({\n  expression: digit,\n  input: digit,\n  isResult: !state.isResult,\n});\n\nconst appendToNegative = (state, digit) => ({\n  expression: state.expression + digit,\n  input: state.input + digit,\n  isNegative: !state.isNegative,\n});\n\nconst appendToOperator = (state, digit) => ({\n  expression: state.expression + digit,\n  input: digit,\n  isOperator: !state.isOperator,\n});\n\nconst replaceZero = (state, digit) => ({\n  expression: state.expression.slice(0, -1) + digit,\n  input: digit,\n});\n\nconst append = (state, digit) => ({\n  expression: state.expression + digit,\n  input: state.input + digit,\n});\n\nexport default handleDigit;\n","import handleDigit from \"./handleDigit\";\n\nfunction handleDecimal(state, decimal) {\n  const { input, isResult, isNegative, isOperator } = state;\n\n  if (input.includes(decimal) && !isResult) return state;\n\n  return input === \"0\" || isResult || isNegative || isOperator\n    ? handleDigit(state, \"0\" + decimal)\n    : handleDigit(state, decimal);\n}\n\nexport default handleDecimal;\n","import handleClear from \"./handleClear\";\nimport handleDelete from \"./handleDelete\";\nimport handleEquals from \"./handleEquals\";\nimport handleOperator from \"./handleOperator\";\nimport handleDecimal from \"./handleDecimal\";\nimport handleDigit from \"./handleDigit\";\nimport * as KEY from \"../modules/key-constants\";\n\nfunction selectHandler(state, value) {\n  switch (value) {\n    case KEY.CLEAR:\n      return handleClear();\n    case KEY.DELETE:\n      return handleDelete(state);\n    case KEY.EQUALS:\n      return handleEquals(state, value);\n    case KEY.ADD:\n    case KEY.SUBTRACT:\n    case KEY.MULTIPLY:\n    case KEY.DIVIDE:\n      return handleOperator(state, value);\n    case KEY.DECIMAL:\n      return handleDecimal(state, value);\n    default:\n      return handleDigit(state, value);\n  }\n}\n\nexport default selectHandler;\n","import React, { useState, useEffect } from \"react\";\nimport Display from \"./components/Display\";\nimport KeyPad from \"./components/KeyPad\";\nimport initialState from \"./modules/initialState\";\nimport getResult from \"./modules/getResult\";\nimport selectHandler from \"./handlers/selectHandler\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [state, setState] = useState(initialState());\n\n  useEffect(() => {\n    if (!state.isEquals) return;\n    setState((prevState) => ({\n      ...prevState,\n      ...getResult(prevState),\n    }));\n  }, [state.isEquals]);\n\n  function handleClick(event) {\n    const value = event.target.value;\n    setState((prevState) => ({\n      ...prevState,\n      ...selectHandler(prevState, value),\n    }));\n  }\n\n  return (\n    <div className=\"App\">\n      <Display expression={state.expression} input={state.input} />\n      <KeyPad onClick={handleClick} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}