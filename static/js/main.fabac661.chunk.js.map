{"version":3,"sources":["components/Display/index.js","utils/index.js","utils/calculate.js","handlers/handleDelete.js","handlers/handleOperator.js","handlers/handleDigit.js","components/KeyPad/index.js","handlers/handleClear.js","handlers/handleEquals.js","handlers/handleDecimal.js","reducers/expression/index.js","reducers/input/index.js","reducers/status/index.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["Display","expression","input","className","id","STATUS","Object","freeze","EQUALS","INPUT","NEGATIVE","OPERATOR","RESULT","initialState","status","KEY","CLEAR","DELETE","DIVIDE","MULTIPLY","SUBTRACT","ADD","DECIMAL","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","getResult","state","result","number","Number","isNaN","NaN","toString","absNumber","Math","abs","round","precision10","toPrecision","toExponential","setPrecision10","expressionString","tokenArray","match","left","term","token","shift","Error","primary","d","unshift","calculate","error","message","dispatch","symbol","type","payload","isMaxDigits","replace","length","isResult","keys","class","click","_state","_symbol","handleOperator","includes","handleDigit","KeyPad","keyPad","map","key","onClick","expressionReducer","action","slice","inputReducer","statusReducer","reducer","App","useReducer","undefined","useEffect","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fabac661.chunk.js","sourcesContent":["import React from 'react';\nimport './style.scss';\n\nexport function Display({ expression, input }) {\n  return (\n    <div className=\"Display\">\n      <div className=\"Expression\">{expression}</div>\n      <div id=\"display\" className=\"Input\">\n        {input}\n      </div>\n    </div>\n  );\n}\n","import { calculate } from './calculate';\n\nexport const STATUS = Object.freeze({\n  EQUALS: 'EQUALS',\n  INPUT: 'INPUT',\n  NEGATIVE: 'NEGATIVE',\n  OPERATOR: 'OPERATOR',\n  RESULT: 'RESULT',\n});\n\nexport const initialState = {\n  expression: '0',\n  input: '0',\n  status: STATUS.INPUT,\n};\n\nexport const KEY = Object.freeze({\n  CLEAR: 'AC',\n  DELETE: 'C',\n  DIVIDE: '/',\n  MULTIPLY: '*',\n  SUBTRACT: '-',\n  ADD: '+',\n  EQUALS: '=',\n  DECIMAL: '.',\n  ZERO: '0',\n  ONE: '1',\n  TWO: '2',\n  THREE: '3',\n  FOUR: '4',\n  FIVE: '5',\n  SIX: '6',\n  SEVEN: '7',\n  EIGHT: '8',\n  NINE: '9',\n});\n\n/**\n * @param {number} number\n * @returns {string}\n */\nfunction setPrecision10(number) {\n  if (Number.isNaN(number)) return NaN.toString();\n\n  if (number === 0) return '0';\n\n  const absNumber = Math.abs(number);\n\n  if (1e-6 <= absNumber && absNumber < 1) {\n    const round9 = Math.round(number * 1e9) / 1e9;\n    return round9.toString();\n  }\n\n  const precision10 = Number(number).toPrecision(10);\n\n  return absNumber < 1e-6 || 1e10 <= absNumber\n    ? Number(precision10).toExponential()\n    : Number(precision10).toString();\n}\n\n/**\n * @param {{expression: string, input: string, status: string}} state\n * @returns {{expression: string, input: string, status: string}}\n */\nexport function getResult(state) {\n  let result;\n\n  try {\n    result = setPrecision10(calculate(state.expression));\n  } catch (error) {\n    result = error.message;\n  }\n\n  return {\n    expression: state.expression,\n    input: result,\n    status: STATUS.RESULT,\n  };\n}\n","/**\n * @param {string} expressionString\n * @return {number}\n */\nexport function calculate(expressionString) {\n  const reNumberOrOperator = /(?:\\d+(?:\\.\\d*)?(?:e[-+]\\d+)?)|[-+*/=]/g;\n  const tokenArray = expressionString.match(reNumberOrOperator);\n\n  return expression();\n\n  function expression() {\n    let left = term();\n    let token = tokenArray.shift();\n\n    while (true) {\n      switch (token) {\n        case '+':\n          left += term();\n          token = tokenArray.shift();\n          break;\n        case '-':\n          left -= term();\n          token = tokenArray.shift();\n          break;\n        case '=':\n          return left;\n        default:\n          throw new Error('expression error');\n      }\n    }\n  }\n\n  function term() {\n    let left = primary();\n    let token = tokenArray.shift();\n\n    while (true) {\n      switch (token) {\n        case '*':\n          left *= primary();\n          token = tokenArray.shift();\n          break;\n        case '/':\n          const d = primary();\n          if (d === 0) throw new Error('divide by zero');\n          left /= d;\n          token = tokenArray.shift();\n          break;\n        default:\n          tokenArray.unshift(token);\n          return left;\n      }\n    }\n  }\n\n  function primary() {\n    const token = tokenArray.shift();\n    if (token === '-') return -primary();\n\n    const result = Number(token);\n    if (Number.isNaN(result)) throw new Error('primary expected');\n\n    return result;\n  }\n}\n","import { STATUS } from '../utils';\n\n/**\n * @param {{ expression: string, input: string, status: string }} state\n * @param {function({ type: string, payload: string }): void} dispatch\n * @param {string} _symbol\n * @returns void\n */\nexport default function (state, dispatch, _symbol) {\n  switch (state.status) {\n    case STATUS.INPUT:\n      return dispatch({ type: 'delete', payload: '0' });\n    default:\n  }\n}\n","import { STATUS } from '../utils';\n\n/**\n * @param {{ expression: string, input: string, status: string }} state\n * @param {function({ type: string, payload: string }): void} dispatch\n * @param {string} symbol\n * @returns void\n */\nexport default function (state, dispatch, symbol) {\n  switch (state.status) {\n    case STATUS.RESULT:\n      return dispatch({ type: 'operator-result', payload: symbol });\n    case STATUS.NEGATIVE:\n      return dispatch({ type: 'operator-negative', payload: symbol });\n    case STATUS.OPERATOR:\n      return symbol === '-'\n        ? dispatch({ type: 'operator-operator-negate', payload: symbol })\n        : dispatch({ type: 'operator-operator', payload: symbol });\n    case STATUS.INPUT:\n      return dispatch({ type: 'operator-input', payload: symbol });\n    default:\n  }\n}\n","import {STATUS} from '../utils';\r\n\r\n/**\r\n * @param {{ expression: string, input: string, status: string }} state\r\n * @param {function({ type: string, payload: string }): void} dispatch\r\n * @param {string} symbol\r\n * @returns void\r\n */\r\nexport default function (state, dispatch, symbol) {\r\n  const isMaxDigits = state.input.replace(/[.-]/g, '').length === 10;\r\n  const isResult = state.status === STATUS.RESULT;\r\n\r\n  if (isMaxDigits && !isResult) return;\r\n\r\n  switch (state.status) {\r\n    case STATUS.RESULT:\r\n      return dispatch({ type: 'digit-result', payload: symbol });\r\n    case STATUS.NEGATIVE:\r\n      return dispatch({ type: 'digit-negative', payload: symbol });\r\n    case STATUS.OPERATOR:\r\n      return dispatch({ type: 'digit-operator', payload: symbol });\r\n    case STATUS.INPUT:\r\n      return state.input === '0'\r\n        ? dispatch({ type: 'digit-input-zero', payload: symbol })\r\n        : dispatch({ type: 'digit-input', payload: symbol });\r\n    default:\r\n  }\r\n}\r\n","import React from 'react';\r\nimport handleClear from \"../../handlers/handleClear\";\r\nimport handleDelete from \"../../handlers/handleDelete\";\r\nimport handleOperator from \"../../handlers/handleOperator\";\r\nimport handleEquals from \"../../handlers/handleEquals\";\r\nimport handleDecimal from \"../../handlers/handleDecimal\";\r\nimport handleDigit from \"../../handlers/handleDigit\";\r\nimport { KEY } from '../../utils';\r\nimport './style.scss';\r\n\r\n// prettier-ignore\r\nconst keys = [\r\n  { id: 'clear', class: 'clear', symbol: KEY.CLEAR, click: handleClear },\r\n  { id: 'delete', class: 'delete', symbol: KEY.DELETE, click: handleDelete },\r\n  { id: 'divide', class: 'operator', symbol: KEY.DIVIDE, click: handleOperator },\r\n  { id: 'multiply', class: 'operator', symbol: KEY.MULTIPLY, click: handleOperator },\r\n  { id: 'subtract', class: 'operator', symbol: KEY.SUBTRACT, click: handleOperator },\r\n  { id: 'add', class: 'operator', symbol: KEY.ADD, click: handleOperator },\r\n  { id: 'equals', class: 'equals', symbol: KEY.EQUALS, click: handleEquals },\r\n  { id: 'decimal', class: 'digit', symbol: KEY.DECIMAL, click: handleDecimal },\r\n  { id: 'zero', class: 'digit', symbol: KEY.ZERO, click: handleDigit },\r\n  { id: 'one', class: 'digit', symbol: KEY.ONE, click: handleDigit },\r\n  { id: 'two', class: 'digit', symbol: KEY.TWO, click: handleDigit },\r\n  { id: 'three', class: 'digit', symbol: KEY.THREE, click: handleDigit },\r\n  { id: 'four', class: 'digit', symbol: KEY.FOUR, click: handleDigit },\r\n  { id: 'five', class: 'digit', symbol: KEY.FIVE, click: handleDigit },\r\n  { id: 'six', class: 'digit', symbol: KEY.SIX, click: handleDigit },\r\n  { id: 'seven', class: 'digit', symbol: KEY.SEVEN, click: handleDigit },\r\n  { id: 'eight', class: 'digit', symbol: KEY.EIGHT, click: handleDigit },\r\n  { id: 'nine', class: 'digit', symbol: KEY.NINE, click: handleDigit },\r\n];\r\n\r\nexport function KeyPad({ state, dispatch }) {\r\n  const keyPad = keys.map((key) => (\r\n    <button\r\n      key={key.id}\r\n      className={`Key ${key.class}`}\r\n      id={key.id}\r\n      onClick={() => key.click(state, dispatch, key.symbol)}\r\n    >\r\n      {key.symbol}\r\n    </button>\r\n  ));\r\n\r\n  return <div className=\"KeyPad\">{keyPad}</div>;\r\n}\r\n","/**\r\n * @param {{ expression: string, input: string, status: string }} _state\r\n * @param {function({ type: string, payload: string }): void} dispatch\r\n * @param {string} symbol\r\n * @returns void\r\n */\r\nexport default function (_state, dispatch, symbol) {\r\n  dispatch({ type: 'clear', payload: symbol });\r\n}\r\n","import { STATUS } from '../utils';\n\n/**\n * @param {{ expression: string, input: string, status: string }} state\n * @param {function({ type: string, payload: string }): void} dispatch\n * @param {string} symbol\n * @returns void\n */\nexport default function (state, dispatch, symbol) {\n  switch (state.status) {\n    case STATUS.NEGATIVE:\n      return dispatch({ type: 'equals-negative', payload: symbol });\n    case STATUS.OPERATOR:\n      return dispatch({ type: 'equals-operator', payload: symbol });\n    case STATUS.INPUT:\n      return dispatch({ type: 'equals-input', payload: symbol });\n    default:\n  }\n}\n","import { STATUS } from '../utils';\nimport handleDigit from './handleDigit';\n\n/**\n * @param {{ expression: string, input: string, status: string }} state\n * @param {function({ type: string, payload: string }): void} dispatch\n * @param {string} symbol\n * @returns void\n */\nexport default function (state, dispatch, symbol) {\n  const isResult = state.status === STATUS.RESULT;\n\n  if (state.input.includes(symbol) && !isResult) return;\n\n  return state.input === '0' || state.status\n    ? handleDigit(state, dispatch, '0' + symbol)\n    : handleDigit(state, dispatch, symbol);\n}\n","/**\r\n * @param {{ expression: string, input: string, status: string }} state\r\n * @param {{ type: string, payload: string }} action\r\n * @return {string}\r\n */\r\nexport function expressionReducer(state, action) {\r\n  const { expression, input } = state;\r\n\r\n  switch (action.type) {\r\n    case 'operator-operator-negate':\r\n    case 'operator-input':\r\n    case 'equals-input':\r\n    case 'digit-negative':\r\n    case 'digit-operator':\r\n    case 'digit-input':\r\n      return expression + action.payload;\r\n    case 'operator-negative':\r\n    case 'equals-negative':\r\n      return expression.slice(0, -2) + action.payload;\r\n    case 'operator-operator':\r\n    case 'equals-operator':\r\n    case 'digit-input-zero':\r\n      return expression.slice(0, -1) + action.payload;\r\n    case 'delete':\r\n      return expression.slice(0, -input.length) + action.payload;\r\n    case 'operator-result':\r\n      return input + action.payload;\r\n    case 'digit-result':\r\n      return action.payload;\r\n    default:\r\n      return expression;\r\n  }\r\n}\r\n","/**\r\n * @param {string} input\r\n * @param {{ type: string, payload: string }} action\r\n * @return {string}\r\n */\r\nexport function inputReducer(input, action) {\r\n  switch (action.type) {\r\n    case 'operator-result':\r\n    case 'operator-negative':\r\n    case 'operator-operator-negate':\r\n    case 'operator-operator':\r\n    case 'operator-input':\r\n    case 'digit-result':\r\n    case 'digit-operator':\r\n    case 'digit-input-zero':\r\n    case 'delete':\r\n      return action.payload;\r\n    case 'digit-negative':\r\n    case 'digit-input':\r\n      return input + action.payload;\r\n    default:\r\n      return input;\r\n  }\r\n}\r\n","import { STATUS } from '../../utils';\n\n/**\n * @param {string} status\n * @param {{ type: string, payload: string }} action\n * @return {string}\n */\nexport function statusReducer(status, action) {\n  switch (action.type) {\n    case 'operator-result':\n    case 'operator-negative':\n    case 'operator-operator':\n    case 'operator-input':\n      return STATUS.OPERATOR;\n    case 'operator-operator-negate':\n      return STATUS.NEGATIVE;\n    case 'equals-negative':\n    case 'equals-operator':\n    case 'equals-input':\n      return STATUS.EQUALS;\n    case 'digit-result':\n    case 'digit-negative':\n    case 'digit-operator':\n    case 'digit-input-zero':\n    case 'digit-input':\n      return STATUS.INPUT;\n    default:\n      return status;\n  }\n}\n","import { getResult, initialState } from '../utils';\r\nimport { expressionReducer } from './expression';\r\nimport { inputReducer } from './input';\r\nimport { statusReducer } from './status';\r\n\r\n/**\r\n * @param {{expression: string, input: string, status: string}} state\r\n * @param {{ type: string, payload: string }} action\r\n * @return {{expression: string, input: string, status: string}}\r\n */\r\nexport function reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'clear':\r\n      return initialState;\r\n    case 'get-result':\r\n      return getResult(state);\r\n    default:\r\n      return {\r\n        expression: expressionReducer(state, action),\r\n        input: inputReducer(state.input, action),\r\n        status: statusReducer(state.status, action),\r\n      };\r\n  }\r\n}\r\n","import React, { useReducer, useEffect } from 'react';\r\nimport { Display, KeyPad } from './components';\r\nimport { reducer } from './reducers';\r\nimport { initialState, STATUS } from './utils';\r\nimport './App.scss';\r\n\r\nexport function App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState, undefined);\r\n\r\n  useEffect(() => {\r\n    if (state.status !== STATUS.EQUALS) return;\r\n    dispatch({ type: 'get-result' });\r\n  }, [state.status]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Display expression={state.expression} input={state.input} />\r\n      <KeyPad state={state} dispatch={dispatch} />\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}